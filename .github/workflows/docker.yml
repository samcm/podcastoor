name: Docker Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: podcastoor:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker Compose
      run: |
        # Copy example env file
        cp .env.example .env
        
        # Set dummy API keys for testing
        sed -i 's/your_gemini_api_key_here/test_key_gemini/' .env
        sed -i 's/your_openrouter_api_key_here/test_key_openrouter/' .env
        
        # Start services
        docker-compose up -d
        
        # Wait for services to be ready
        sleep 30
        
        # Check MinIO health
        curl -f http://localhost:9000/minio/health/live
        
        # Check if processor container is running
        docker-compose ps processor | grep "Up"
        
        # Cleanup
        docker-compose down -v

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'